{"version":3,"file":"static/js/553.125e7d38.chunk.js","mappings":"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","sources":["webpack://presentator/./src/components/Header/Header.module.scss?e028","webpack://presentator/./src/components/MobileModal/MobileModal.module.scss?638a","components/MobileModal/MobileModal.tsx","components/MobileModal/index.ts","components/Header/index.ts","components/Header/Header.tsx","webpack://presentator/./src/components/Logo/Logo.module.scss?abcf","components/Logo/Logo.tsx","components/Logo/index.ts","webpack://presentator/./src/pages/Generation/Generation.module.scss?61e3","pages/Generation/utils.ts","pages/Generation/Generation.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Header_root__XEZos\",\"menu\":\"Header_menu__fUszO\",\"menuGroup\":\"Header_menuGroup__9-dDI\",\"menuItem\":\"Header_menuItem__1UOpp\",\"buttonGroup\":\"Header_buttonGroup__wJLma\",\"buttonPrimary\":\"Header_buttonPrimary__VFpem\",\"buttonDefault\":\"Header_buttonDefault__YMTwL\",\"buttonDefaultBorder\":\"Header_buttonDefaultBorder__2cvXC\",\"buttonAccount\":\"Header_buttonAccount__jhjxY\",\"buttonAccountContainer\":\"Header_buttonAccountContainer__goDoj\",\"buttonAccountText\":\"Header_buttonAccountText__RwCQJ\",\"iconContainer\":\"Header_iconContainer__++Xj6\",\"icon\":\"Header_icon__qVgDo\",\"mobileMenu\":\"Header_mobileMenu__i2Bel\",\"mobileButtonGroup\":\"Header_mobileButtonGroup__D6tEn\",\"mobileButtonAccountContainer\":\"Header_mobileButtonAccountContainer__0OGcH\",\"mobileIconContainer\":\"Header_mobileIconContainer__WRwt7\",\"mobileIcon\":\"Header_mobileIcon__HDZT8\",\"mobileButtonAccountText\":\"Header_mobileButtonAccountText__AHDJu\",\"mobileButtonAccount\":\"Header_mobileButtonAccount__8Aax9\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MobileModal_container__lXvf1\",\"modal\":\"MobileModal_modal__54hNF\",\"authModal\":\"MobileModal_authModal__MlsWH\",\"close\":\"MobileModal_close__AcVxA\",\"content\":\"MobileModal_content__5HUjq\",\"authContent\":\"MobileModal_authContent__3C0Gu\",\"menuItem\":\"MobileModal_menuItem__GRwsZ\",\"authItem\":\"MobileModal_authItem__xc0OS\"};","import { FC } from \"react\";\nimport ReactDom from 'react-dom';\nimport styles from './MobileModal.module.scss'\nimport { useNavigate } from \"react-router-dom\";\n\ninterface MobileModalProps {\n\tisModalVisible: boolean;\n\tsetIsModalVisible: any;\n}\n\nconst MobileModal: FC<MobileModalProps> = ({isModalVisible, setIsModalVisible}) => {\n\tconst role = window.localStorage.getItem('role')\n\tconst navigate = useNavigate();\n\tif (!isModalVisible) return null\n\n\treturn ReactDom.createPortal(\n\t\t<>\n\t\t\t<div className={styles.container}>\n\t\t\t\t{\n\t\t\t\t\trole && role === 'user' ? (\n\t\t\t\t\t\t<div className={styles.modal}>\n\n\t\t\t\t\t\t\t<div className={styles.close} >\n\t\t\t\t\t\t\t\t<img src=\"../images/x.svg\" alt=\"close\" onClick={() => setIsModalVisible(false)}/>\n\t\t\t\t\t\t\t</div>\t\n\n\t\t\t\t\t\t\t<div className={styles.authContent}>\n\t\t\t\t\t\t\t\t<span className={styles.menuItem}>\n\t\t\t\t\t\t\t\t\t<a href=\"https://t.me/presentatorai/2\">FAQ</a>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className={styles.menuItem}>Поддержка</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className={styles.authModal}>\n\n\t\t\t\t\t\t\t<div className={styles.close} >\n\t\t\t\t\t\t\t\t<img src=\"../images/x.svg\" alt=\"close\" onClick={() => setIsModalVisible(false)}/>\n\t\t\t\t\t\t\t</div>\t\n\n\t\t\t\t\t\t\t<div className={styles.content}>\n\t\t\t\t\t\t\t\t<span className={styles.menuItem}>\n\t\t\t\t\t\t\t\t\t<a href=\"https://t.me/presentatorai/2\">FAQ</a>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className={styles.menuItem}>Поддержка</span>\n\t\t\t\t\t\t\t\t<span className={styles.authItem} onClick={() => navigate('/login')}>Вход</span>\n\t\t\t\t\t\t\t\t<span className={styles.authItem} onClick={() => navigate('/registration')}>Регистрация</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t\t}\t\n\t\t\t</div>\n\t\t</>, \n\t\tdocument.getElementById('portal') as HTMLElement\n\t) \n}\n\nexport default MobileModal","import MobileModal from \"./MobileModal\";\nexport default MobileModal","import Header from \"./Header\";\n\nexport default Header","import React, {FC, useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./Header.module.scss\"\nimport Logo from \"../Logo\";\nimport content from \"./Header.content.json\";\nimport MobileModal from \"../MobileModal\";\ninterface HeaderProps {\n\trole?: string | null;\n\tisAuth?: boolean;\n\tgeneration?: boolean;\n}\nconst Header: FC<HeaderProps> = ({generation, role}: HeaderProps) => {\n\tconst [isModalVisible, setIsModalVisible] = useState<boolean>(false);\n\tconst navigate = useNavigate();\n\t\n\treturn (\n\t\t<header className={styles.root}>\n\t\t\t<Logo/>\n\t\t\t<div className={styles.menu}>\n\t\t\t\t<div className={styles.menuGroup}>\n\t\t\t\t\t{\n\t\t\t\t\t\t!generation && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className={styles.menuItem}><a href=\"https://t.me/presentatorai/2\">{content.faq}</a></div>\n\t\t\t\t\t\t\t\t<div className={styles.menuItem}>\n\t\t\t\t\t\t\t\t{content.support}\n\t\t\t\t\t\t\t\t\t{/* <a href=\"ai.presentator@gmail.com\">{content.support}</a> */}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t{\n\t\t\t\t\trole === 'user'\n\t\t\t\t\t? (\n\t\t\t\n\t\t\t\t\t\t\t<div className={styles.buttonGroup}>\n\t\t\t\t\t\t\t\t<div className={styles.buttonAccountContainer}>\n\t\t\t\t\t\t\t\t\t<div className={styles.buttonAccount} onClick={() => navigate(\"/user/account\")}>\n\n\t\t\t\t\t\t\t\t\t\t<div className={styles.iconContainer}>\n\n\t\t\t\t\t\t\t\t\t\t\t<div className={styles.icon}>\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"../images/user.svg\" alt=\"user\" />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div className={styles.buttonAccountText}>\n\t\t\t\t\t\t\t\t\t\t\t<span>{content.account}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t)\t\t\n\t\t\t\t\t:\n\t\t\t\t\t( \n\t\t\t\t\t\t\n\t\t\t\t\t\t<div className={styles.buttonGroup}>\n\t\t\t\t\t\t\t<div className={styles.buttonPrimary} onClick={() => navigate(\"/login\")}>{content.login}</div>\n\t\t\t\t\t\t\t<div className={styles.buttonDefaultBorder}>\n\t\t\t\t\t\t\t\t<div className={styles.buttonDefault} onClick={() => navigate(\"/registration\")}>\n\t\t\t\t\t\t\t\t\t{content.register}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\n\t\t\t</div>\n\t\t\t\n\n\t\t\t{!isModalVisible ? (\n\t\t\n\t\t\t\t<div className={styles.mobileMenu} >\n\t\t\t\t\t{\n\t\t\t\t\t\trole === 'user'  ? (\n\t\t\t\t\t\t\t\t<div className={styles.mobileButtonGroup}>\n\t\t\t\t\t\t\t\t<div className={styles.mobileButtonAccountContainer}>\n\t\t\t\t\t\t\t\t\t<div className={styles.mobileButtonAccount} onClick={() => navigate(\"/user/account\")}>\n\n\t\t\t\t\t\t\t\t\t\t<div className={styles.mobileIconContainer}>\n\n\t\t\t\t\t\t\t\t\t\t\t<div className={styles.mobileIcon}>\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"../images/user.svg\" alt=\"user\" />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div className={styles.mobileButtonAccountText}>\n\t\t\t\t\t\t\t\t\t\t\t<span>Кабинет</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : <></> \n\t\t\t\t\t}\n\t\t\t\t\t<img src=\"../images/menu.svg\" alt=\"menu\" onClick={() => setIsModalVisible(true)}/>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t<MobileModal isModalVisible={isModalVisible} setIsModalVisible={setIsModalVisible}/>\n\t\t</header>\n\t)\n}\n\nexport default Header","// extracted by mini-css-extract-plugin\nexport default {\"logo\":\"Logo_logo__vIIIa\"};","import React, {FC} from \"react\";\nimport style from './Logo.module.scss'\nimport { useNavigate } from \"react-router-dom\";\n\nconst Logo : FC = () => {\n\tlet role = localStorage.getItem('role')\n\tconst navigate = useNavigate();\n\tconst checkRole = () => {\n\t\tif (role) {\n\t\t\treturn `/${role}/homepage`\n\t\t} else {\n\t\t\treturn '/viewer/homepage'\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className={style.logo}\n\t\t\tonClick={() => navigate(checkRole())}\n\t\t>\n\t\t\t\t<img src=\"../images/logoAI.svg\"/>\n\t\t\t</div>\n\t)\n}\n\nexport default Logo;","import Logo from \"./Logo\";\n\nexport default Logo","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Generation_container__r6Cn3\",\"opacityBox\":\"Generation_opacityBox__Z1UNV\",\"contentBox\":\"Generation_contentBox__4fAb1\",\"content\":\"Generation_content__tGzLk\",\"generation\":\"Generation_generation__SVRCn\",\"form\":\"Generation_form__hp0Z7\",\"title\":\"Generation_title__ri7pE\",\"subtitle\":\"Generation_subtitle__TYDP1\",\"label\":\"Generation_label__e8eDF\",\"labelgen\":\"Generation_labelgen__2tbi9\",\"generationInput\":\"Generation_generationInput__ERXtg\",\"buttonContainer\":\"Generation_buttonContainer__5L6IG\",\"checkboxContainer\":\"Generation_checkboxContainer__CPqJK\",\"checkboxLabel\":\"Generation_checkboxLabel__KDmzF\",\"radioContainer\":\"Generation_radioContainer__ReeId\",\"radioTitle\":\"Generation_radioTitle__NPekw\",\"checkbox\":\"Generation_checkbox__0JlIN\",\"footerLabel\":\"Generation_footerLabel__8O30x\",\"radio\":\"Generation_radio__LgoTm\",\"radioLabel\":\"Generation_radioLabel__3m06a\",\"radioBox\":\"Generation_radioBox__POyod\",\"radioGroup\":\"Generation_radioGroup__DJgNl\",\"inputError\":\"Generation_inputError__8pD+p\",\"titleError\":\"Generation_titleError__Updqe\",\"labelError\":\"Generation_labelError__aphWB\",\"minError\":\"Generation_minError__MbQff\",\"titleContainer\":\"Generation_titleContainer__CfuOX\",\"removeSlide\":\"Generation_removeSlide__mMvL2\",\"generationTitle\":\"Generation_generationTitle__4HXyt\"};","\nimport * as yup from 'yup';\n\nexport const validationSchema = yup.object({\n\ttheme: yup\n\t\t.string()\n\t\t.required('required'),\n\ttitles: yup.array().of(\n\t\tyup.object()\n\t).min(6, 'Минимальное количество слайдов - 6'),\n})","import React, { FC, useState, useEffect } from \"react\";\nimport styles from \"./Generation.module.scss\";\nimport Header from \"../../components/Header\";\nimport { Field, Formik } from \"formik\";\nimport axios from \"axios\";\nimport { Form, useNavigate } from \"react-router-dom\";\nimport Modal from \"../../components/Modal\";\nimport { validationSchema } from \"./utils\";\nimport cn from \"classnames\";\n\nconst Generation = () => {\n  let role = window.localStorage.getItem(\"role\");\n  const navigate = useNavigate();\n  const [typeGeneration, setTypeGeneration] = useState(\"automatic\");\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [generationMessage, setGenerationMessage] = useState(\"Презентация генерируется...\");\n\n  const handleRadioChange = (value) => {\n    setTypeGeneration(value);\n  };\n\n  const checkRole = () => {\n    if (role) {\n      return `/${role}/presentation`;\n    } else {\n      return \"/viewer/presentation\";\n    }\n  };\n\n  const sendPostRequest = async (data) => {\n    try {\n      setIsGenerating(true);\n\n      const response = await fetch(\"https://презентатор.рф/api2/generate/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to generate presentation\");\n      }\n\n      const responseData = await response.json();\n      localStorage.setItem(\"presentationLink\", responseData);\n      navigate(`${checkRole()}`);\n    } catch (error) {\n    } finally {\n      setIsGenerating(false);\n    }\n    \n    };\n\n    const updateGen = async () => {\n      try {\n        \n        const phoneNumber = window.localStorage.getItem(\"login\");\n        var cleanedPhoneNumber = \"\";\n        if (phoneNumber) {\n           cleanedPhoneNumber = phoneNumber.replace(/\\D/g, '');\n        } else {\n        }\n        const response = await axios.post(\n          `https://презентатор.рф/api/update_generates/?phone_number=${cleanedPhoneNumber}`\n        );\n  \n        if (!response.ok) {\n          throw new Error(\"Failed to generate presentation\");\n        }\n  \n        const responseData = await response.json();\n        localStorage.setItem(\"presentationLink\", responseData);\n        navigate(`${checkRole()}`);\n      } catch (error) {\n      }\n    };\n\n  useEffect(() => {\n    \n    window.yaContextCb.push(() => {\n      window.Ya.Context.AdvManager.render({\n        blockId: \"R-A-6659913-4\",\n        type: \"rewarded\",\n        platform: \"touch\"\n      });\n    });\n\n    let interval;\n\n    if (isGenerating) {\n      let messages = [\n        \"Почти готово, пара минут осталось!\",\n        \"Осталось совсем чуть-чуть!\",\n        \"Подбираем картинки для вас!\",\n        \"Всего пару минут и все будет готово!\",\n        \"Минутка терпения, мы почти закончили!\"\n      ];\n\n      let index = 0;\n      interval = setInterval(() => {\n        setGenerationMessage(messages[index]);\n        index = (index + 1) % messages.length;\n      }, 3500);\n\n      return () => clearInterval(interval);\n    }\n  }, [isGenerating]);\n\n  useEffect(() => {\n\tif (role) {\n\t} else {\n\t  navigate (`/login`)\n\t}\n  }, []);\n\n  return (\n    <main className={styles.container}>\n      <div className={styles.opacityBox}>\n        <div className={styles.contentBox}>\n          <Header generation role={role} />\n          <div className={styles.content}>\n            <div className={styles.generation}>\n              <div className={styles.title}>Генератор презентаций</div>\n              <div className={styles.subtitle}>Заполните все пункты</div>\n\n              <Formik\n                validationSchema={validationSchema}\n                initialValues={{\n                  theme: \"\",\n                  slides: \"\",\n                  locale: false,\n                }}\n                onSubmit={(values, { resetForm }) => {\n                  const data = {\n                    promt: values.theme,\n                    count_list: parseInt(values.slides, 10),\n                    type: typeGeneration,\n                  };\n\n                  console.log(\"data\", data);\n                  sendPostRequest(data);\n                  updateGen();\n                  \n                }}\n              >\n                {({ errors, touched, handleSubmit }) => (\n                  <>\n                    <Form className={styles.form}>\n                      <label className={cn(styles.label, { [styles.labelError]: errors.theme && touched.theme })}>\n                        Тема презентации (до 200 символов)\n                      </label>\n                      <Field\n                        name=\"theme\"\n                        placeholder=\"Киберспорт\"\n                        className={cn(styles.generationInput, { [styles.inputError]: errors.theme && touched.theme })}\n                      />\n\n                      <label className={cn(styles.label, { [styles.labelError]: errors.slides && touched.slides })}>\n                        Количество слайдов (от 2 до 15)\n                      </label>\n                      <Field\n                        name=\"slides\"\n                        type=\"number\"\n                        min=\"2\"\n                        max=\"15\"\n                        placeholder=\"6\"\n                        onInput={(e) => {\n                          const maxLimit = 15;\n                          const inputVal = parseInt(e.target.value) || 2;\n                          const sanitizedVal = Math.min(maxLimit, inputVal);\n                          e.target.value = sanitizedVal.toString();\n                        }}\n                        className={cn(styles.generationInput, { [styles.inputError]: errors.slides && touched.slides })}\n                      />\n                      {/* <div className={styles.checkboxContainer}>\n                        <Field name=\"locale\" type=\"checkbox\" className={styles.checkbox} />\n                        <span className={styles.checkboxLabel}>Формировать презентацию на английском языке</span>\n                      </div> */}\n\n                      {/* <div className={styles.radioContainer}>\n                        <span className={styles.radioTitle}>План презентации</span>\n                        <div className={styles.radioBox}>\n                          <div className={styles.radioGroup}>\n                            <input\n                              type=\"radio\"\n                              id=\"automatic\"\n                              name=\"type\"\n                              className={styles.radio}\n                              checked={typeGeneration === \"automatic\"}\n                              onChange={() => handleRadioChange(\"automatic\")}\n                            />\n                            <label className={styles.radioLabel} htmlFor=\"automatic\">\n                              Сделать автоматически\n                            </label>\n                          </div>\n\n                          <div className={styles.radioGroup}>\n                            <input\n                              type=\"radio\"\n                              id=\"manually\"\n                              name=\"type\"\n                              className={styles.radio}\n                              checked={typeGeneration === \"manually\"}\n                              onChange={() => handleRadioChange(\"manually\")}\n                            />\n                            <label className={styles.radioLabel} htmlFor=\"manually\">\n                              Указать вручную\n                            </label>\n                          </div>\n                        </div>\n                      </div> */}\n\n                      {isGenerating ? (\n                        <div className={styles.labelgen}>\n                          <label >\n                            {generationMessage}\n                          </label>\n                        </div>\n                      ) : (\n                        <div className={styles.buttonContainer}>\n                          <button type=\"submit\" onClick={handleSubmit}>\n                            Начать магию\n                          </button>\n                        </div>\n                      )}\n                     \n                    </Form>\n                  </>\n                )}\n              </Formik>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Generation;"],"names":["_ref","isModalVisible","setIsModalVisible","role","window","localStorage","getItem","navigate","useNavigate","ReactDom","_jsx","_Fragment","children","className","styles","_jsxs","src","alt","onClick","href","document","getElementById","generation","useState","Logo","content","MobileModal","style","concat","validationSchema","yup","theme","required","titles","of","min","Generation","typeGeneration","setTypeGeneration","isGenerating","setIsGenerating","generationMessage","setGenerationMessage","checkRole","useEffect","interval","yaContextCb","push","Ya","Context","AdvManager","render","blockId","type","platform","messages","index","setInterval","length","clearInterval","Header","Formik","initialValues","slides","locale","onSubmit","values","resetForm","data","promt","count_list","parseInt","console","log","async","response","fetch","method","headers","body","JSON","stringify","ok","Error","responseData","json","setItem","error","sendPostRequest","phoneNumber","cleanedPhoneNumber","replace","axios","post","updateGen","_ref2","errors","touched","handleSubmit","Form","cn","Field","name","placeholder","max","onInput","e","inputVal","target","value","sanitizedVal","Math","toString"],"sourceRoot":""}