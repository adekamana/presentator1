{"version":3,"file":"static/js/60.483f8e0b.chunk.js","mappings":"iJACA,QAAuB,qBAAvB,EAAmD,qBAAnD,EAAoF,0BAApF,EAAyH,yBAAzH,EAAgK,4BAAhK,EAA4M,8BAA5M,EAA0P,8BAA1P,EAA8S,oCAA9S,EAAkW,8BAAlW,EAAyZ,uCAAzZ,EAAod,kCAApd,EAAsgB,8BAAtgB,EAA2iB,qBAA3iB,EAA6kB,2BAA7kB,EAA4nB,kCAA5nB,EAA6rB,6CAA7rB,EAAgwB,oCAAhwB,EAAizB,2BAAjzB,EAAs2B,wCAAt2B,EAAo6B,oC,mUCAp6B,QAA4B,+BAA5B,EAAmE,2BAAnE,EAA0G,+BAA1G,EAAiJ,2BAAjJ,EAAsL,6BAAtL,EAAiO,iCAAjO,EAA6Q,8BAA7Q,EAAsT,8B,aCStT,MCTA,EDS0CA,IAA0C,IAAzC,eAACC,EAAc,kBAAEC,GAAkBF,EAC7E,MAAMG,EAAOC,OAAOC,aAAaC,QAAQ,QACnCC,GAAWC,EAAAA,EAAAA,MACjB,OAAKP,EAEEQ,EAAAA,cACNC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAiBF,SAE/BT,GAAiB,SAATA,GACPY,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAaF,SAAA,EAE5BF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAaF,UAC5BF,EAAAA,EAAAA,KAAA,OAAKM,IAAI,kBAAkBC,IAAI,QAAQC,QAASA,IAAMhB,GAAkB,QAGzEa,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAmBF,SAAA,EAClCF,EAAAA,EAAAA,KAAA,QAAMG,UAAWC,EAAgBF,UAChCF,EAAAA,EAAAA,KAAA,KAAGS,KAAK,+BAA8BP,SAAC,WAExCF,EAAAA,EAAAA,KAAA,QAAMG,UAAWC,EAAgBF,SAAC,kEAIpCG,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAiBF,SAAA,EAEhCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAaF,UAC5BF,EAAAA,EAAAA,KAAA,OAAKM,IAAI,kBAAkBC,IAAI,QAAQC,QAASA,IAAMhB,GAAkB,QAGzEa,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAeF,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,QAAMG,UAAWC,EAAgBF,UAChCF,EAAAA,EAAAA,KAAA,KAAGS,KAAK,+BAA8BP,SAAC,WAExCF,EAAAA,EAAAA,KAAA,QAAMG,UAAWC,EAAgBF,SAAC,4DAClCF,EAAAA,EAAAA,KAAA,QAAMG,UAAWC,EAAiBI,QAASA,IAAMX,EAAS,UAAUK,SAAC,8BACrEF,EAAAA,EAAAA,KAAA,QAAMG,UAAWC,EAAiBI,QAASA,IAAMX,EAAS,iBAAiBK,SAAC,iFAOlFQ,SAASC,eAAe,WAxCG,IAyC3B,EEpDF,ECSgCrB,IAAsC,IAArC,WAACsB,EAAU,KAAEnB,GAAkBH,EAC/D,MAAOC,EAAgBC,IAAqBqB,EAAAA,EAAAA,WAAkB,GACxDhB,GAAWC,EAAAA,EAAAA,MAEjB,OACCO,EAAAA,EAAAA,MAAA,UAAQF,UAAWC,EAAYF,SAAA,EAC9BF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,KACLT,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAYF,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAiBF,UAE9BU,IACAP,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,EACCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAgBF,UAACF,EAAAA,EAAAA,KAAA,KAAGS,KAAK,+BAA8BP,SAAEa,EAAAA,QACzEf,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAgBF,UAACF,EAAAA,EAAAA,KAAA,KAAGS,KAAK,kCAAiCP,SAAEa,EAAAA,YAOtE,SAATtB,GAGEO,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAmBF,UAClCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAA8BF,UAC7CG,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAsBI,QAASA,IAAMX,EAAS,iBAAiBK,SAAA,EAE9EF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAqBF,UAEpCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAYF,UAC3BF,EAAAA,EAAAA,KAAA,OAAKM,IAAI,qBAAqBC,IAAI,cAKpCP,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAyBF,UACxCF,EAAAA,EAAAA,KAAA,QAAAE,SAAOa,EAAAA,eAWZV,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAmBF,SAAA,EAClCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAsBI,QAASA,IAAMX,EAAS,UAAUK,SAAEa,EAAAA,MAC1Ef,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAA2BF,UAC1CF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAsBI,QAASA,IAAMX,EAAS,iBAAiBK,SAC7Ea,EAAAA,aAULxB,EA6BE,MA3BHc,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAkBF,SAAA,CAEvB,SAATT,GACEO,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAyBF,UACzCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAoCF,UACnDG,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAA4BI,QAASA,IAAMX,EAAS,iBAAiBK,SAAA,EAEpFF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAA2BF,UAE1CF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAkBF,UACjCF,EAAAA,EAAAA,KAAA,OAAKM,IAAI,qBAAqBC,IAAI,cAKpCP,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAA+BF,UAC9CF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,yDAOPF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KAELD,EAAAA,EAAAA,KAAA,OAAKM,IAAI,qBAAqBC,IAAI,OAAOC,QAASA,IAAMhB,GAAkB,SAG5EQ,EAAAA,EAAAA,KAACgB,EAAW,CAACzB,eAAgBA,EAAgBC,kBAAmBA,MACxD,C,yCCtGX,QAAuB,mB,uBCGvB,MCFA,EDEkBsB,KACjB,IAAIrB,EAAOE,aAAaC,QAAQ,QAChC,MAAMC,GAAWC,EAAAA,EAAAA,MASjB,OACCE,EAAAA,EAAAA,KAAA,OAAKG,UAAWc,EACfT,QAASA,IAAMX,EATZJ,EACG,IAANyB,OAAWzB,EAAI,aAER,oBAM8BS,UAEpCF,EAAAA,EAAAA,KAAA,OAAKM,IAAI,0BACJ,C,kCEnBT,QAA0B,4BAA1B,EAA8D,0BAA9D,EAAgK,kCAAhK,EAAoN,oCAApN,EAAyQ,mCAAzQ,EAAkU,wC,uBCQlU,MCRA,EDQmChB,IAA0C,IAAzC,eAACC,EAAc,kBAAEC,GAAkBF,EACtE,MAAM6B,EAAcA,KACjB3B,GAAkB,EAAM,EAE3B,OAAKD,EACEQ,EAAAA,cAAsBC,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAeF,UAC3DG,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAuBF,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAcI,QAASW,EAAYjB,UAClDF,EAAAA,EAAAA,KAAA,OAAKM,IAAI,kBAAkBC,IAAI,aAEhCF,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAqBF,SAAA,EACpCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAsBF,SAAC,uSACvCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAA4BI,QAASW,EAAYjB,SAAC,yEAMrEQ,SAASC,eAAe,WAdI,IAcqB,C,6DE1BlD,SAAgB,UAAY,8BAA8B,WAAa,+BAA+B,WAAa,+BAA+B,QAAU,4BAA4B,WAAa,+BAA+B,KAAO,yBAAyB,MAAQ,0BAA0B,SAAW,6BAA6B,MAAQ,0BAA0B,SAAW,6BAA6B,gBAAkB,oCAAoC,gBAAkB,oCAAoC,kBAAoB,sCAAsC,cAAgB,kCAAkC,eAAiB,mCAAmC,WAAa,+BAA+B,SAAW,6BAA6B,YAAc,gCAAgC,MAAQ,0BAA0B,WAAa,+BAA+B,SAAW,6BAA6B,WAAa,+BAA+B,WAAa,+BAA+B,WAAa,+BAA+B,WAAa,+BAA+B,SAAW,6BAA6B,eAAiB,mCAAmC,YAAc,gCAAgC,gBAAkB,qC,+DCAxuC,QAA0B,uBAA1B,EAA6D,yBAA7D,EAA8F,qBAA9F,EAA6H,uBAA7H,EAA4J,qBAA5J,EAA4L,wBAA5L,EAAoO,6BAApO,EAAoR,gCAApR,EAAoU,6BAApU,EAAmX,+BAAnX,EAAma,8BAAna,EAAud,mC,iCCUvd,MCVA,EDU8BrB,IAA4C,IAA3C,eAAEC,EAAc,kBAAEC,GAAmBF,EAClE,MAAM8B,GAAoBC,EAAAA,EAAAA,YAAWC,EAAAA,UAC/B,kBAAEC,GAAsBH,EAAaG,mBACpCC,EAAYC,GAAiBC,EAAAA,UAAe,IAC5CC,EAAqBC,GAA0BF,EAAAA,UAAe,GAC/DG,EAAcnC,OAAOoC,OAAOC,MAyB5BZ,EAAcA,KAClB3B,GAAkB,GAClBiC,GAAc,EAAM,EAMtB,OAHAO,EAAAA,EAAAA,YAAU,KACRC,QAAQC,IAAIV,EAAW,GACtB,CAACA,IACCjC,EACEQ,EAAAA,cACLM,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAeF,SAAA,CAC5BsB,GACCnB,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAuBF,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAcI,QAASW,EAAYjB,UACjDF,EAAAA,EAAAA,KAAA,OAAKM,IAAI,kBAAkBC,IAAI,aAEjCF,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAqBF,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAsBF,SAAC,sIACvCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAA4BI,QAASW,EAAYjB,SAAC,wEAItEG,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAiBF,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAcI,QAASW,EAAYjB,UACjDF,EAAAA,EAAAA,KAAA,OAAKM,IAAI,kBAAkBC,IAAI,aAEjCF,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAeF,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,QAAMG,UAAWC,EAAaF,SAAC,gIAC/BF,EAAAA,EAAAA,KAAA,QAAMG,UAAWC,EAAgBF,SAAC,iIAClCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAqBF,SAAC,+HACtCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAyBI,QAASe,EAtDnCY,KACnBN,GAAe,IACjBnC,OAAO0C,YAAYC,MAAK,KACtB3C,OAAO4C,GAAGC,QAAQC,WAAWC,OAAO,CAClCC,QAAS,gBACTC,KAAM,WACNC,SAAU,WACV,IAGJlD,OAAO0C,YAAYC,MAAK,KACtB3C,OAAO4C,GAAGC,QAAQC,WAAWC,OAAO,CAClCC,QAAS,gBACTC,KAAM,WACNC,SAAU,SACV,IAINC,YAAW,KACTpB,GAAc,EAAK,GAClB,IAAK,EAiCyF,IAAMG,GAAuB,GAAM1B,SAAC,0HAMnIF,EAAAA,EAAAA,KAAC8C,EAAAA,EAAU,CAACvD,eAAgBoC,EAAqBnC,kBAAmBoC,OAEtElB,SAASC,eAAe,WA9BE,IA+B3B,E,aE7EI,MAAMoC,EAAmBC,EAAAA,GAAW,CAC1CC,MAAOD,EAAAA,KAELE,SAAS,YACXC,OAAQH,EAAAA,KAAYI,GACnBJ,EAAAA,MACCK,IAAI,EAAG,oL,uBCRV,QAA0B,kCAA1B,EAAoE,gCAApE,EAAkL,wCAAlL,EAA4O,0CAA5O,EAAuS,yCAAvS,EAAsW,8CAAtW,EAAia,qCCAja,ECQyC/D,IAA0C,IAAzC,eAACC,EAAc,kBAAEC,GAAkBF,EAC5E,MAAM6B,EAAcA,KACjB3B,GAAkB,EAAM,EAE1B,OAAKD,EACEQ,EAAAA,cACLC,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAeF,UAC7BG,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAuBF,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAcI,QAASW,EAAYjB,UACjDF,EAAAA,EAAAA,KAAA,OAAKM,IAAI,kBAAkBC,IAAI,aAEjCF,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAqBF,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAsBF,SAAC,+VAC5CF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAkBF,SAAC,qJAG9BF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAA4BI,QAASW,EAAYjB,SAAC,yEAMxEQ,SAASC,eAAe,WAlBE,IAmB3B,ECoNH,EAxOmB2C,KACjB,MAAM,UAACC,IAAalC,EAAAA,EAAAA,YAAWC,EAAAA,UACzB,cAACkC,GAAiBD,EACxB,IAAI9D,EAAOC,OAAOC,aAAaC,QAAQ,QACvC,MAAMC,GAAWC,EAAAA,EAAAA,OACV2D,EAAgBC,IAAqB7C,EAAAA,EAAAA,UAAS,cAC9C8C,EAAcC,IAAmB/C,EAAAA,EAAAA,WAAS,IAC1CgD,EAAmBC,IAAwBjD,EAAAA,EAAAA,UAAS,mJACpDtB,EAAgBC,IAAqBqB,EAAAA,EAAAA,WAAS,IAC9CkD,EAAqBC,IAA0BnD,EAAAA,EAAAA,WAAS,GAMzDoD,EAAYA,IACZxE,EACI,IAANyB,OAAWzB,EAAI,iBAER,uBAsFX,OA9BAuC,EAAAA,EAAAA,YAAU,KAER,IAAIkC,EAEJ,GAAIP,EAAc,CAChB,IAAIQ,EAAW,CACb,iLACA,2IACA,iJACA,wLACA,oMAGEC,EAAQ,EAMZ,OALAF,EAAWG,aAAY,KACrBP,EAAqBK,EAASC,IAC9BA,GAASA,EAAQ,GAAKD,EAASG,MAAM,GACpC,MAEI,IAAMC,cAAcL,EAC7B,IACC,CAACP,KAEJ3B,EAAAA,EAAAA,YAAU,KACPvC,GAEFI,EAAQ,SACV,GACI,KAGDQ,EAAAA,EAAAA,MAAA,QAAMF,UAAWC,EAAOoE,UAAUtE,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAOqE,WAAWvE,UAChCG,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAOsE,WAAWxE,SAAA,EAChCF,EAAAA,EAAAA,KAAC2E,EAAAA,EAAM,CAAC/D,YAAU,EAACnB,KAAMA,KACzBO,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAOW,QAAQb,UAC7BG,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAOQ,WAAWV,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAOwE,MAAM1E,SAAC,+HAC9BF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAOyE,SAAS3E,SAAC,oHAEjCF,EAAAA,EAAAA,KAAC8E,EAAAA,GAAM,CACL/B,iBAAkBA,EAClBgC,cAAe,CACb9B,MAAO,GACP+B,OAAQ,GACRC,QAAQ,GAEVC,SAAUA,CAACC,EAAM7F,KAAqB,IAAnB,UAAE8F,GAAW9F,EAnGtB+F,WACtB,IACEzB,GAAgB,GAChB,MAAM0B,QAAiBC,MAAM,yGAAyC,CACpEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUC,KAGvB,IAAKP,EAASQ,GACZ,MAAM,IAAIC,MAAM,mCAGlB,MAAMC,QAAqBV,EAASW,OACpCtG,aAAauG,QAAQ,mBAAoBF,GACzCnG,EAAS,GAADqB,OAAI+C,KACd,CAAE,MAAOkC,GACLnC,GAAuB,GACvB/B,QAAQC,IAAIiE,EAChB,CAAC,QACCvC,GAAgB,EAClB,GAmFcwC,CANa,CACXC,MAAOlB,EAAOlC,MACdqD,WAAYC,SAASpB,EAAOH,OAAQ,IACpCrC,KAAMc,IA5EJ4B,WAChB,IAEE,MAAMmB,EAAc9G,OAAOC,aAAaC,QAAQ,SAChD,IAAI6G,EAAqB,GACrBD,IACDC,EAAqBD,EAAYE,QAAQ,MAAO,KAGnD,MAAMpB,QAAiBqB,EAAAA,EAAMC,KAAK,8HAAD1F,OAC8BuF,IAG/D,IAAKnB,EAASQ,GACZ,MAAM,IAAIC,MAAM,mCAGlB,MAAMC,QAAqBV,EAASW,OACpCtG,aAAauG,QAAQ,mBAAoBF,GACzCnG,EAAS,GAADqB,OAAI+C,KACd,CAAE,MAAOkC,GACT,GA2DYU,EAAW,EAEX3G,SAED4G,IAAA,IAAC,OAAEC,EAAM,QAAEC,EAAO,aAAEC,GAAcH,EAAA,OACjC9G,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEG,EAAAA,EAAAA,MAAC6G,EAAAA,GAAI,CAAC/G,UAAWC,EAAO+G,KAAKjH,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,SAAOG,UAAWiH,IAAGhH,EAAOiH,MAAO,CAAE,CAACjH,EAAOkH,YAAaP,EAAO9D,OAAS+D,EAAQ/D,QAAS/C,SAAC,qKAG5FF,EAAAA,EAAAA,KAACuH,EAAAA,GAAK,CACJC,KAAK,QACLC,YAAY,sEACZtH,UAAWiH,IAAGhH,EAAOsH,gBAAiB,CAAE,CAACtH,EAAOuH,YAAaZ,EAAO9D,OAAS+D,EAAQ/D,WAGvFjD,EAAAA,EAAAA,KAAA,SAAOG,UAAWiH,IAAGhH,EAAOiH,MAAO,CAAE,CAACjH,EAAOkH,YAAaP,EAAO/B,QAAUgC,EAAQhC,SAAU9E,SAAC,8IAG9FF,EAAAA,EAAAA,KAACuH,EAAAA,GAAK,CACJC,KAAK,SACL7E,KAAK,SACLU,IAAI,IACJuE,IAAI,KACJH,YAAY,wHACZI,QAAUC,IACR,MACMC,EAAWxB,SAASuB,EAAEE,OAAOC,QAAU,EACvCC,EAAeC,KAAK9E,IAFT,GAEuB0E,GACxCD,EAAEE,OAAOC,MAAQC,EAAaE,UAAU,EAE1CjI,UAAWiH,IAAGhH,EAAOsH,gBAAiB,CAAE,CAACtH,EAAOuH,YAAaZ,EAAO/B,QAAUgC,EAAQhC,WAwCvFrB,GACC3D,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAOiI,SAASnI,UAC9BF,EAAAA,EAAAA,KAAA,SAAAE,SACG2D,OAIL7D,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAOkI,gBAAgBpI,UAIrCF,EAAAA,EAAAA,KAAA,UAAQ2C,KAAK,SAASnC,QAASgD,EAAgByD,EAAe,IAAMzH,GAAkB,GAAOW,UAAWC,EAAOmI,OAAOrI,SAAC,8EAO5H,eAOfF,EAAAA,EAAAA,KAACwI,EAAK,CAACjJ,eAAgBA,EAAgBC,kBAAmBA,KAC1DQ,EAAAA,EAAAA,KAACyI,EAAgB,CAAClJ,eAAgBwE,EAAqBvE,kBAAmBwE,MACrE,C","sources":["webpack://presentator/./src/components/Header/Header.module.scss?e028","webpack://presentator/./src/components/MobileModal/MobileModal.module.scss?638a","components/MobileModal/MobileModal.tsx","components/MobileModal/index.ts","components/Header/index.ts","components/Header/Header.tsx","webpack://presentator/./src/components/Logo/Logo.module.scss?abcf","components/Logo/Logo.tsx","components/Logo/index.ts","webpack://presentator/./src/components/NoAddModal/NoAddModal.module.scss?8e21","components/NoAddModal/NoAddModal.tsx","components/NoAddModal/index.ts","webpack://presentator/./src/pages/Generation/Generation.module.scss?61e3","webpack://presentator/./src/components/Modal/Modal.module.scss?bd65","components/Modal/Modal.tsx","components/Modal/index.ts","pages/Generation/utils.ts","webpack://presentator/./src/components/ServerErrorModal/ServerErrorModal.module.scss?dc53","components/ServerErrorModal/index.ts","components/ServerErrorModal/ServerErrorModal.tsx","pages/Generation/Generation.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Header_root__hAAqH\",\"menu\":\"Header_menu__m9Ztd\",\"menuGroup\":\"Header_menuGroup__HzSh6\",\"menuItem\":\"Header_menuItem__fOllg\",\"buttonGroup\":\"Header_buttonGroup__Nqr5X\",\"buttonPrimary\":\"Header_buttonPrimary__h+PCO\",\"buttonDefault\":\"Header_buttonDefault__efFXe\",\"buttonDefaultBorder\":\"Header_buttonDefaultBorder__1zeWC\",\"buttonAccount\":\"Header_buttonAccount__sZwQm\",\"buttonAccountContainer\":\"Header_buttonAccountContainer__o3ja1\",\"buttonAccountText\":\"Header_buttonAccountText__uSYzd\",\"iconContainer\":\"Header_iconContainer__BdMjc\",\"icon\":\"Header_icon__Werm+\",\"mobileMenu\":\"Header_mobileMenu__164++\",\"mobileButtonGroup\":\"Header_mobileButtonGroup__Wh6HY\",\"mobileButtonAccountContainer\":\"Header_mobileButtonAccountContainer__4IfLK\",\"mobileIconContainer\":\"Header_mobileIconContainer__uhyoh\",\"mobileIcon\":\"Header_mobileIcon__C9tEf\",\"mobileButtonAccountText\":\"Header_mobileButtonAccountText__3lkiX\",\"mobileButtonAccount\":\"Header_mobileButtonAccount__elxoh\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MobileModal_container__kuRVa\",\"modal\":\"MobileModal_modal__tf3qK\",\"authModal\":\"MobileModal_authModal__958fY\",\"close\":\"MobileModal_close__qs2H8\",\"content\":\"MobileModal_content__mmudK\",\"authContent\":\"MobileModal_authContent__82qBj\",\"menuItem\":\"MobileModal_menuItem__pkqv-\",\"authItem\":\"MobileModal_authItem__GoTh+\"};","import { FC } from \"react\";\r\nimport ReactDom from 'react-dom';\r\nimport styles from './MobileModal.module.scss'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ninterface MobileModalProps {\r\n\tisModalVisible: boolean;\r\n\tsetIsModalVisible: any;\r\n}\r\n\r\nconst MobileModal: FC<MobileModalProps> = ({isModalVisible, setIsModalVisible}) => {\r\n\tconst role = window.localStorage.getItem('role')\r\n\tconst navigate = useNavigate();\r\n\tif (!isModalVisible) return null\r\n\r\n\treturn ReactDom.createPortal(\r\n\t\t<>\r\n\t\t\t<div className={styles.container}>\r\n\t\t\t\t{\r\n\t\t\t\t\trole && role === 'user' ? (\r\n\t\t\t\t\t\t<div className={styles.modal}>\r\n\r\n\t\t\t\t\t\t\t<div className={styles.close} >\r\n\t\t\t\t\t\t\t\t<img src=\"../images/x.svg\" alt=\"close\" onClick={() => setIsModalVisible(false)}/>\r\n\t\t\t\t\t\t\t</div>\t\r\n\r\n\t\t\t\t\t\t\t<div className={styles.authContent}>\r\n\t\t\t\t\t\t\t\t<span className={styles.menuItem}>\r\n\t\t\t\t\t\t\t\t\t<a href=\"https://t.me/presentatorai/2\">FAQ</a>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<span className={styles.menuItem}>Поддержка</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className={styles.authModal}>\r\n\r\n\t\t\t\t\t\t\t<div className={styles.close} >\r\n\t\t\t\t\t\t\t\t<img src=\"../images/x.svg\" alt=\"close\" onClick={() => setIsModalVisible(false)}/>\r\n\t\t\t\t\t\t\t</div>\t\r\n\r\n\t\t\t\t\t\t\t<div className={styles.content}>\r\n\t\t\t\t\t\t\t\t<span className={styles.menuItem}>\r\n\t\t\t\t\t\t\t\t\t<a href=\"https://t.me/presentatorai/2\">FAQ</a>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<span className={styles.menuItem}>Поддержка</span>\r\n\t\t\t\t\t\t\t\t<span className={styles.authItem} onClick={() => navigate('/login')}>Вход</span>\r\n\t\t\t\t\t\t\t\t<span className={styles.authItem} onClick={() => navigate('/registration')}>Регистрация</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t\t}\t\r\n\t\t\t</div>\r\n\t\t</>, \r\n\t\tdocument.getElementById('portal') as HTMLElement\r\n\t) \r\n}\r\n\r\nexport default MobileModal","import MobileModal from \"./MobileModal\";\r\nexport default MobileModal","import Header from \"./Header\";\r\n\r\nexport default Header","import React, {FC, useState} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styles from \"./Header.module.scss\"\r\nimport Logo from \"../Logo\";\r\nimport content from \"./Header.content.json\";\r\nimport MobileModal from \"../MobileModal\";\r\ninterface HeaderProps {\r\n\trole?: string | null;\r\n\tisAuth?: boolean;\r\n\tgeneration?: boolean;\r\n}\r\nconst Header: FC<HeaderProps> = ({generation, role}: HeaderProps) => {\r\n\tconst [isModalVisible, setIsModalVisible] = useState<boolean>(false);\r\n\tconst navigate = useNavigate();\r\n\t\r\n\treturn (\r\n\t\t<header className={styles.root}>\r\n\t\t\t<Logo/>\r\n\t\t\t<div className={styles.menu}>\r\n\t\t\t\t<div className={styles.menuGroup}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t!generation && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<div className={styles.menuItem}><a href=\"https://t.me/presentatorai/2\">{content.faq}</a></div>\r\n\t\t\t\t\t\t\t\t<div className={styles.menuItem}><a href=\"mailto:ai.presentator@gmail.com\">{content.support}</a></div>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t{\r\n\t\t\t\t\trole === 'user'\r\n\t\t\t\t\t? (\r\n\t\t\t\r\n\t\t\t\t\t\t\t<div className={styles.buttonGroup}>\r\n\t\t\t\t\t\t\t\t<div className={styles.buttonAccountContainer}>\r\n\t\t\t\t\t\t\t\t\t<div className={styles.buttonAccount} onClick={() => navigate(\"/user/account\")}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className={styles.iconContainer}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={styles.icon}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"../images/user.svg\" alt=\"user\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className={styles.buttonAccountText}>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{content.account}</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\t\t\r\n\t\t\t\t\t:\r\n\t\t\t\t\t( \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className={styles.buttonGroup}>\r\n\t\t\t\t\t\t\t<div className={styles.buttonPrimary} onClick={() => navigate(\"/login\")}>{content.login}</div>\r\n\t\t\t\t\t\t\t<div className={styles.buttonDefaultBorder}>\r\n\t\t\t\t\t\t\t\t<div className={styles.buttonDefault} onClick={() => navigate(\"/registration\")}>\r\n\t\t\t\t\t\t\t\t\t{content.register}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t</div>\r\n\t\t\t\r\n\r\n\t\t\t{!isModalVisible ? (\r\n\t\t\r\n\t\t\t\t<div className={styles.mobileMenu} >\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trole === 'user'  ? (\r\n\t\t\t\t\t\t\t\t<div className={styles.mobileButtonGroup}>\r\n\t\t\t\t\t\t\t\t<div className={styles.mobileButtonAccountContainer}>\r\n\t\t\t\t\t\t\t\t\t<div className={styles.mobileButtonAccount} onClick={() => navigate(\"/user/account\")}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className={styles.mobileIconContainer}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={styles.mobileIcon}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"../images/user.svg\" alt=\"user\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className={styles.mobileButtonAccountText}>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>Кабинет</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : <></> \r\n\t\t\t\t\t}\r\n\t\t\t\t\t<img src=\"../images/menu.svg\" alt=\"menu\" onClick={() => setIsModalVisible(true)}/>\r\n\t\t\t\t</div>\r\n\t\t\t) : null}\r\n\t\t\t<MobileModal isModalVisible={isModalVisible} setIsModalVisible={setIsModalVisible}/>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header","// extracted by mini-css-extract-plugin\nexport default {\"logo\":\"Logo_logo__QHnjz\"};","import React, {FC} from \"react\";\r\nimport style from './Logo.module.scss'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Logo : FC = () => {\r\n\tlet role = localStorage.getItem('role')\r\n\tconst navigate = useNavigate();\r\n\tconst checkRole = () => {\r\n\t\tif (role) {\r\n\t\t\treturn `/${role}/homepage`\r\n\t\t} else {\r\n\t\t\treturn '/viewer/homepage'\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={style.logo}\r\n\t\t\tonClick={() => navigate(checkRole())}\r\n\t\t>\r\n\t\t\t\t<img src=\"../images/logoAI.svg\"/>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Logo;","import Logo from \"./Logo\";\r\n\r\nexport default Logo","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"NoAddModal_overlay__3Gpzb\",\"close\":\"NoAddModal_close__hJhRu\",\"rewardGeneration\":\"NoAddModal_rewardGeneration__pPUCq\",\"rewardContent\":\"NoAddModal_rewardContent__aA18r\",\"rewardContainer\":\"NoAddModal_rewardContainer__Q0p8q\",\"rewardSubtitle\":\"NoAddModal_rewardSubtitle__0vHc6\",\"rewardButtonPrimary\":\"NoAddModal_rewardButtonPrimary__l8+ms\"};","import {FC} from \"react\";\r\nimport styles from './NoAddModal.module.scss'\r\nimport ReactDom from \"react-dom\";\r\n\r\ninterface ModalProps {\r\n  isModalVisible: boolean;\r\n  setIsModalVisible: (isModalVisible: boolean) => void;\r\n}\r\n\r\nconst NoAddModal: FC<ModalProps> = ({isModalVisible, setIsModalVisible}) => {\r\n\tconst handleClose = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\tif (!isModalVisible) return null;\r\n\treturn ReactDom.createPortal(<div className={styles.overlay}>\r\n\t\t<div className={styles.rewardContainer}>\r\n\t\t\t<div className={styles.close} onClick={handleClose}>\r\n\t\t\t\t<img src=\"../images/x.svg\" alt=\"close\" />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.rewardContent}>\r\n\t\t\t\t<div className={styles.rewardSubtitle}>Генерации за рекламу будут доступны в следующем месяце</div>\r\n\t\t\t\t<div className={styles.rewardButtonPrimary} onClick={handleClose}>\r\n\t\t\t\t\tПродолжить\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>, \r\n\tdocument.getElementById('portal') as HTMLElement)\r\n}\r\n\r\nexport default NoAddModal","import NoAddModal from \"./NoAddModal\";\r\nexport default NoAddModal","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Generation_container__cSpig\",\"opacityBox\":\"Generation_opacityBox__d3Ijq\",\"contentBox\":\"Generation_contentBox__+F9lX\",\"content\":\"Generation_content__LCVGE\",\"generation\":\"Generation_generation__28Jh8\",\"form\":\"Generation_form__S91CQ\",\"title\":\"Generation_title__BpI-U\",\"subtitle\":\"Generation_subtitle__lIU+z\",\"label\":\"Generation_label__BxZ7F\",\"labelgen\":\"Generation_labelgen__o8rwv\",\"generationInput\":\"Generation_generationInput__dKhnd\",\"buttonContainer\":\"Generation_buttonContainer__sBabn\",\"checkboxContainer\":\"Generation_checkboxContainer__MSOgR\",\"checkboxLabel\":\"Generation_checkboxLabel__h+Mzc\",\"radioContainer\":\"Generation_radioContainer__T7xJY\",\"radioTitle\":\"Generation_radioTitle__Xn7ZS\",\"checkbox\":\"Generation_checkbox__9-17Z\",\"footerLabel\":\"Generation_footerLabel__zPHrn\",\"radio\":\"Generation_radio__1YX1g\",\"radioLabel\":\"Generation_radioLabel__ErmO2\",\"radioBox\":\"Generation_radioBox__nOn9L\",\"radioGroup\":\"Generation_radioGroup__xNucn\",\"inputError\":\"Generation_inputError__8Bt3O\",\"titleError\":\"Generation_titleError__Z2QCi\",\"labelError\":\"Generation_labelError__Debip\",\"minError\":\"Generation_minError__A894U\",\"titleContainer\":\"Generation_titleContainer__SvlqA\",\"removeSlide\":\"Generation_removeSlide__ptEPD\",\"generationTitle\":\"Generation_generationTitle__J99cD\"};","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Modal_overlay__-ClV2\",\"container\":\"Modal_container__p+mta\",\"close\":\"Modal_close__uD7qY\",\"content\":\"Modal_content__1ELKZ\",\"title\":\"Modal_title__YRO34\",\"subtitle\":\"Modal_subtitle__pTqhN\",\"buttonPrimary\":\"Modal_buttonPrimary__Ybp2V\",\"rewardGeneration\":\"Modal_rewardGeneration__epZEN\",\"rewardContent\":\"Modal_rewardContent__Uo6Zu\",\"rewardContainer\":\"Modal_rewardContainer__VjQeA\",\"rewardSubtitle\":\"Modal_rewardSubtitle__-uv6Y\",\"rewardButtonPrimary\":\"Modal_rewardButtonPrimary__ch8gX\"};","import React, { FC, useContext, useEffect } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport styles from \"./Modal.module.scss\";\r\nimport NoAddModal from \"../NoAddModal\";\r\nimport { context } from \"../../containers/Layout\";\r\n\r\ninterface ModalProps {\r\n  isModalVisible: boolean;\r\n  setIsModalVisible: (isModalVisible: boolean) => void;\r\n}\r\n\r\nconst Modal: FC<ModalProps> = ({ isModalVisible, setIsModalVisible }) => {\r\n  const contextValue: any = useContext(context);\r\n  const { checkAddGenerates } = contextValue.checkAddGenerates;\r\n  const [isRewarded, setIsRewarded] = React.useState(false);\r\n  const [isNoAddModalVisible, setIsNoAddModalVisible] = React.useState(false);\r\n  const screenWidth = window.screen.width;\r\n  const rewardGeneration = () => {\r\n    if (screenWidth >= 768) {\r\n      window.yaContextCb.push(() => {\r\n        window.Ya.Context.AdvManager.render({\r\n          blockId: \"R-A-6659913-3\",\r\n          type: \"rewarded\",\r\n          platform: \"desktop\",\r\n        });\r\n      });\r\n    } else {\r\n      window.yaContextCb.push(() => {\r\n        window.Ya.Context.AdvManager.render({\r\n          blockId: \"R-A-6659913-4\",\r\n          type: \"rewarded\",\r\n          platform: \"touch\",\r\n        });\r\n      })\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setIsRewarded(true);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsModalVisible(false);\r\n    setIsRewarded(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(isRewarded);\r\n  }, [isRewarded]);\r\n  if (!isModalVisible) return null;\r\n  return ReactDom.createPortal(\r\n    <div className={styles.overlay}>\r\n      {isRewarded ? (\r\n        <div className={styles.rewardContainer}>\r\n          <div className={styles.close} onClick={handleClose}>\r\n            <img src=\"../images/x.svg\" alt=\"close\" />\r\n          </div>\r\n          <div className={styles.rewardContent}>\r\n            <div className={styles.rewardSubtitle}>Получена одна генерация</div>\r\n            <div className={styles.rewardButtonPrimary} onClick={handleClose}>Продолжить</div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className={styles.container}>\r\n          <div className={styles.close} onClick={handleClose}>\r\n            <img src=\"../images/x.svg\" alt=\"close\" />\r\n          </div>\r\n          <div className={styles.content}>\r\n            <span className={styles.title}>Скачиваний не осталось</span>\r\n            <span className={styles.subtitle}>Вы можете их приобрести</span>\r\n            <div className={styles.buttonPrimary}>Приобрести скачивания</div>\r\n            <div className={styles.rewardGeneration} onClick={checkAddGenerates ? rewardGeneration : () => setIsNoAddModalVisible(true)}>\r\n              Генерации за рекламу\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <NoAddModal isModalVisible={isNoAddModalVisible} setIsModalVisible={setIsNoAddModalVisible} />\r\n    </div>,\r\n    document.getElementById(\"portal\") as HTMLElement\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import Modal \tfrom './Modal';\r\nexport default Modal","\r\nimport * as yup from 'yup';\r\n\r\nexport const validationSchema = yup.object({\r\n\ttheme: yup\r\n\t\t.string()\r\n\t\t.required('required'),\r\n\ttitles: yup.array().of(\r\n\t\tyup.object()\r\n\t).min(6, 'Минимальное количество слайдов - 6'),\r\n})","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"ServerErrorModal_overlay__HZiPW\",\"close\":\"ServerErrorModal_close__hB2r4\",\"rewardGeneration\":\"ServerErrorModal_rewardGeneration__orhZB\",\"rewardContent\":\"ServerErrorModal_rewardContent__7JDUD\",\"rewardContainer\":\"ServerErrorModal_rewardContainer__HM0l6\",\"rewardSubtitle\":\"ServerErrorModal_rewardSubtitle__T8RAj\",\"rewardButtonPrimary\":\"ServerErrorModal_rewardButtonPrimary__NfXzj\",\"rewardSpan\":\"ServerErrorModal_rewardSpan__CvXwY\"};","import ServerErrorModal from \"./ServerErrorModal\";\r\nexport default ServerErrorModal","import { FC } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport styles from \"./ServerErrorModal.module.scss\";\r\n\r\ninterface ModalProps {\r\n  isModalVisible: boolean;\r\n  setIsModalVisible: (isModalVisible: boolean) => void;\r\n}\r\n\r\nconst ServerErrorModal: FC<ModalProps> = ({isModalVisible, setIsModalVisible}) => {\r\n\tconst handleClose = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  if (!isModalVisible) return null;\r\n  return ReactDom.createPortal(\r\n    <div className={styles.overlay}>\r\n      <div className={styles.rewardContainer}>\r\n        <div className={styles.close} onClick={handleClose}>\r\n          <img src=\"../images/x.svg\" alt=\"close\" />\r\n        </div>\r\n        <div className={styles.rewardContent}>\r\n          <div className={styles.rewardSubtitle}>Сейчас большая нагрузка на сервер, попробуйте пожалуйста позднее.</div>\r\n\t\t\t\t\t<div className={styles.rewardSpan}>\r\n \t\t\t\t\t\tМы начислили вам 2 генерации\r\n\t\t\t\t\t</div >\r\n          <div className={styles.rewardButtonPrimary} onClick={handleClose}>\r\n            Продолжить\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.getElementById(\"portal\") as HTMLElement\r\n  );\r\n}\r\n\r\nexport default ServerErrorModal","import React, { FC, useState, useEffect, useContext } from \"react\";\r\nimport styles from \"./Generation.module.scss\";\r\nimport Header from \"../../components/Header\";\r\nimport { Field, Formik } from \"formik\";\r\nimport axios from \"axios\";\r\nimport { Form, useNavigate } from \"react-router-dom\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { validationSchema } from \"./utils\";\r\nimport cn from \"classnames\";\r\nimport { context } from \"../../containers/Layout\";\r\nimport ServerErrorModal from \"../../components/ServerErrorModal\";\r\n\r\nconst Generation = () => {\r\n  const {generates} = useContext(context)\r\n  const {free_generate} = generates\r\n  let role = window.localStorage.getItem(\"role\");\r\n  const navigate = useNavigate();\r\n  const [typeGeneration, setTypeGeneration] = useState(\"automatic\");\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [generationMessage, setGenerationMessage] = useState(\"Презентация генерируется...\");\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [isErrorModalVisible, setIsErrorModalVisible] = useState(false);\r\n\r\n  const handleRadioChange = (value) => {\r\n    setTypeGeneration(value);\r\n  };\r\n\r\n  const checkRole = () => {\r\n    if (role) {\r\n      return `/${role}/presentation`;\r\n    } else {\r\n      return \"/viewer/presentation\";\r\n    }\r\n  };\r\n\r\n  const sendPostRequest = async (data) => {\r\n    try { \r\n      setIsGenerating(true);\r\n      const response = await fetch(\"https://презентатор.рф/api2/generate/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to generate presentation\");\r\n      }\r\n\r\n      const responseData = await response.json();\r\n      localStorage.setItem(\"presentationLink\", responseData);\r\n      navigate(`${checkRole()}`);\r\n    } catch (error) {\r\n        setIsErrorModalVisible(true);\r\n        console.log(error);\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n    \r\n    };\r\n\r\n    const updateGen = async () => {\r\n      try {\r\n\r\n        const phoneNumber = window.localStorage.getItem(\"login\");\r\n        var cleanedPhoneNumber = \"\";\r\n        if (phoneNumber) {\r\n           cleanedPhoneNumber = phoneNumber.replace(/\\D/g, '');\r\n        } else {\r\n        }\r\n        const response = await axios.post(\r\n          `https://презентатор.рф/api/update_generates/?phone_number=${cleanedPhoneNumber}`\r\n        );\r\n  \r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to generate presentation\");\r\n        }\r\n  \r\n        const responseData = await response.json();\r\n        localStorage.setItem(\"presentationLink\", responseData);\r\n        navigate(`${checkRole()}`);\r\n      } catch (error) {\r\n      }\r\n    };\r\n \r\n\r\n  useEffect(() => {\r\n    \r\n    let interval;\r\n\r\n    if (isGenerating) {\r\n      let messages = [\r\n        \"Почти готово, пара минут осталось!\",\r\n        \"Осталось совсем чуть-чуть!\",\r\n        \"Подбираем картинки для вас!\",\r\n        \"Всего пару минут и все будет готово!\",\r\n        \"Минутка терпения, мы почти закончили!\"\r\n      ];\r\n\r\n      let index = 0;\r\n      interval = setInterval(() => {\r\n        setGenerationMessage(messages[index]);\r\n        index = (index + 1) % messages.length;\r\n      }, 3500);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [isGenerating]);\r\n\r\n  useEffect(() => {\r\n\tif (role) {\r\n\t} else {\r\n\t  navigate (`/login`)\r\n\t}\r\n  }, []);\r\n\r\n  return (\r\n    <main className={styles.container}>\r\n      <div className={styles.opacityBox}>\r\n        <div className={styles.contentBox}>\r\n          <Header generation role={role} />\r\n          <div className={styles.content}>\r\n            <div className={styles.generation}>\r\n              <div className={styles.title}>Генератор презентаций</div>\r\n              <div className={styles.subtitle}>Заполните все пункты</div>\r\n\r\n              <Formik\r\n                validationSchema={validationSchema}\r\n                initialValues={{\r\n                  theme: \"\",\r\n                  slides: \"\",\r\n                  locale: false,\r\n                }}\r\n                onSubmit={(values, { resetForm }) => {\r\n                  const data = {\r\n                    promt: values.theme,\r\n                    count_list: parseInt(values.slides, 10),\r\n                    type: typeGeneration,\r\n                  };\r\n\r\n                  sendPostRequest(data);\r\n                  updateGen();\r\n                  \r\n                }}\r\n              >\r\n                {({ errors, touched, handleSubmit }) => (\r\n                  <>\r\n                    <Form className={styles.form}>\r\n                      <label className={cn(styles.label, { [styles.labelError]: errors.theme && touched.theme })}>\r\n                        Тема презентации (до 200 символов)\r\n                      </label>\r\n                      <Field\r\n                        name=\"theme\"\r\n                        placeholder=\"Укажите тему\"\r\n                        className={cn(styles.generationInput, { [styles.inputError]: errors.theme && touched.theme })}\r\n                      />\r\n\r\n                      <label className={cn(styles.label, { [styles.labelError]: errors.slides && touched.slides })}>\r\n                        Количество слайдов (от 2 до 15)\r\n                      </label>\r\n                      <Field\r\n                        name=\"slides\"\r\n                        type=\"number\"\r\n                        min=\"2\"\r\n                        max=\"15\"\r\n                        placeholder=\"Укажите кол-во слайдов\"\r\n                        onInput={(e) => {\r\n                          const maxLimit = 15;\r\n                          const inputVal = parseInt(e.target.value) || 2;\r\n                          const sanitizedVal = Math.min(maxLimit, inputVal);\r\n                          e.target.value = sanitizedVal.toString();\r\n                        }}\r\n                        className={cn(styles.generationInput, { [styles.inputError]: errors.slides && touched.slides })}\r\n                      />\r\n                      {/* <div className={styles.checkboxContainer}>\r\n                        <Field name=\"locale\" type=\"checkbox\" className={styles.checkbox} />\r\n                        <span className={styles.checkboxLabel}>Формировать презентацию на английском языке</span>\r\n                      </div> */}\r\n\r\n                      {/* <div className={styles.radioContainer}>\r\n                        <span className={styles.radioTitle}>План презентации</span>\r\n                        <div className={styles.radioBox}>\r\n                          <div className={styles.radioGroup}>\r\n                            <input\r\n                              type=\"radio\"\r\n                              id=\"automatic\"\r\n                              name=\"type\"\r\n                              className={styles.radio}\r\n                              checked={typeGeneration === \"automatic\"}\r\n                              onChange={() => handleRadioChange(\"automatic\")}\r\n                            />\r\n                            <label className={styles.radioLabel} htmlFor=\"automatic\">\r\n                              Сделать автоматически\r\n                            </label>\r\n                          </div>\r\n\r\n                          <div className={styles.radioGroup}>\r\n                            <input\r\n                              type=\"radio\"\r\n                              id=\"manually\"\r\n                              name=\"type\"\r\n                              className={styles.radio}\r\n                              checked={typeGeneration === \"manually\"}\r\n                              onChange={() => handleRadioChange(\"manually\")}\r\n                            />\r\n                            <label className={styles.radioLabel} htmlFor=\"manually\">\r\n                              Указать вручную\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div> */}\r\n\r\n                      {isGenerating ? (\r\n                        <div className={styles.labelgen}>\r\n                          <label >\r\n                            {generationMessage}\r\n                          </label>\r\n                        </div>\r\n                      ) : (\r\n                        <div className={styles.buttonContainer}>\r\n                          {/*\r\n                          TODO: Применить метод для начала генерации\r\n                          */}\r\n                          <button type=\"submit\" onClick={free_generate ? handleSubmit : () => setIsModalVisible(true)} className={styles.button}>\r\n                            Начать магию\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                     \r\n                    </Form>\r\n                  </>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal isModalVisible={isModalVisible} setIsModalVisible={setIsModalVisible} />\r\n      <ServerErrorModal isModalVisible={isErrorModalVisible} setIsModalVisible={setIsErrorModalVisible} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Generation;"],"names":["_ref","isModalVisible","setIsModalVisible","role","window","localStorage","getItem","navigate","useNavigate","ReactDom","_jsx","_Fragment","children","className","styles","_jsxs","src","alt","onClick","href","document","getElementById","generation","useState","Logo","content","MobileModal","style","concat","handleClose","contextValue","useContext","context","checkAddGenerates","isRewarded","setIsRewarded","React","isNoAddModalVisible","setIsNoAddModalVisible","screenWidth","screen","width","useEffect","console","log","rewardGeneration","yaContextCb","push","Ya","Context","AdvManager","render","blockId","type","platform","setTimeout","NoAddModal","validationSchema","yup","theme","required","titles","of","min","Generation","generates","free_generate","typeGeneration","setTypeGeneration","isGenerating","setIsGenerating","generationMessage","setGenerationMessage","isErrorModalVisible","setIsErrorModalVisible","checkRole","interval","messages","index","setInterval","length","clearInterval","container","opacityBox","contentBox","Header","title","subtitle","Formik","initialValues","slides","locale","onSubmit","values","resetForm","async","response","fetch","method","headers","body","JSON","stringify","data","ok","Error","responseData","json","setItem","error","sendPostRequest","promt","count_list","parseInt","phoneNumber","cleanedPhoneNumber","replace","axios","post","updateGen","_ref2","errors","touched","handleSubmit","Form","form","cn","label","labelError","Field","name","placeholder","generationInput","inputError","max","onInput","e","inputVal","target","value","sanitizedVal","Math","toString","labelgen","buttonContainer","button","Modal","ServerErrorModal"],"sourceRoot":""}