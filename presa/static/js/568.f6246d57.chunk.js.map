{"version":3,"file":"static/js/568.f6246d57.chunk.js","mappings":"sIACA,QAA4B,gCAA5B,EAAyE,iCAAzE,EAAoH,8BAApH,EAAyJ,2BAAzJ,EAA4L,4BAA5L,EAA+N,2BAA/N,EAA0Q,oCAA1Q,EAAsT,4BAAtT,EAA6V,+BAA7V,EAA4Y,oCAA5Y,EAA+b,mCAA/b,EAAwhB,4BAAxhB,EAAokB,oCAApkB,EAA0nB,sCAA1nB,EAA2vB,iCAA3vB,EAAyyB,iC,+BCClyB,MAAMA,EAAmBC,EAAAA,GAAW,CAC1CC,MAAOD,EAAAA,KAELE,SAAS,qBACXC,SAAUH,EAAAA,KAERE,SAAS,0B,+BCFZ,MA+DA,EA/DyBE,KACvB,MAAMC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAiBC,UAChCH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAkBC,UAChCC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAeC,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EACdG,QAASA,IAAMP,EAAS,oBAAoBK,SAAA,EAE5CH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,wEACNH,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAaC,SAAC,WAEjCH,EAAAA,EAAAA,KAACM,EAAAA,GAAM,CACLd,iBAAkBA,EAClBe,cAAe,CACbb,MAAO,GACPE,SAAU,IAEZY,SAAUA,CAACC,EAAMC,KAAmB,IAAjB,UAACC,GAAUD,EAC5BZ,EAAS,iBACTc,QAAQC,IAAI,SAAUJ,GACtBE,GAAW,EACXR,SAEDW,IAAA,IAAC,OAAEC,EAAM,QAAEC,GAASF,EAAA,OACnBd,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAAChB,UAAWC,EAAYC,UAC3BC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAqBC,SAAA,EACnCH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaC,SAAC,wEAC9BC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAqBC,SAAC,6FACvCH,EAAAA,EAAAA,KAAA,QACEC,UAAWC,EACXG,QAASA,IAAMP,EAAS,UAAUK,SACnC,uCAIHH,EAAAA,EAAAA,KAAA,SAAOC,UAAWiB,IAAGhB,EAAc,CAAC,CAACA,GAAoBa,EAAOrB,OAASsB,EAAQtB,QAAQS,SAAC,gJAC1FH,EAAAA,EAAAA,KAACmB,EAAAA,GAAK,CACJC,KAAK,QACLC,YAAY,iCACZpB,UAAWiB,IAAGhB,EAAsB,CAAC,CAACA,GAAoBa,EAAOrB,OAASsB,EAAQtB,WAEpFM,EAAAA,EAAAA,KAAA,SAAOC,UAAWiB,IAAGhB,EAAc,CAAC,CAACA,GAAoBa,EAAOnB,UAAYoB,EAAQpB,WAAWO,SAAC,0CAChGH,EAAAA,EAAAA,KAACmB,EAAAA,GAAK,CACJC,KAAK,WACLE,KAAK,WACLD,YAAY,uCACZpB,UAAWiB,IAAGhB,EAAsB,CAAC,CAACA,GAAoBa,EAAOnB,UAAYoB,EAAQpB,cAEvFI,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAuBC,UACrCH,EAAAA,EAAAA,KAAA,UAAQsB,KAAK,SAAQnB,SAAC,yCAGrB,UAKV,C","sources":["webpack://presentator/./src/pages/Auth/Registration/Registration.module.scss?942d","pages/Auth/Registration/utils.ts","pages/Auth/Registration/Registration.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Registration_container__WQ2d3\",\"opacityBox\":\"Registration_opacityBox__FB0kX\",\"content\":\"Registration_content__wLWT3\",\"logo\":\"Registration_logo__tO07a\",\"color\":\"Registration_color__QsQ9n\",\"form\":\"Registration_form__SBDqo\",\"formContainer\":\"Registration_formContainer__sVcVP\",\"title\":\"Registration_title__d21Yn\",\"subtitle\":\"Registration_subtitle__UCI9+\",\"subtitleLabel\":\"Registration_subtitleLabel__Vx26f\",\"subtitleLink\":\"Registration_subtitleLink__RT790\",\"formFooter\":\"Registration_formFooter__3fY03\",\"label\":\"Registration_label__V9qkd\",\"registerInput\":\"Registration_registerInput__FaIGN\",\"buttonContainer\":\"Registration_buttonContainer__YdMgX\",\"forgot\":\"Registration_forgot__yKmz3\",\"restore\":\"Registration_restore__aZcXy\",\"inputError\":\"Registration_inputError__4xY0w\",\"labelError\":\"Registration_labelError__bp5OA\"};","import * as yup from 'yup';\n\nexport const validationSchema = yup.object({\n\tlogin: yup\n\t\t.string()\n\t\t.required('Login is required'),\n\tpassword: yup\n\t\t.string()\n\t\t.required('Password is required'),\n})","import { FC } from \"react\";\nimport styles from \"./Registration.module.scss\";\nimport { Field, Form, Formik } from 'formik'\nimport { useNavigate } from \"react-router-dom\";\nimport { validationSchema } from \"./utils\";\nimport cn from \"classnames\"\nconst Registration: FC = () => {\n  const navigate = useNavigate()\n  return (\n    <main className={styles.container}>\n      <div className={styles.opacityBox}>\n        <div className={styles.content}>\n          <div className={styles.logo}\n            onClick={() => navigate('/viewer/homepage')}\n          >\n            <span>Презентатор</span>\n            <span className={styles.color}>AI</span>\n          </div>\n          <Formik\n            validationSchema={validationSchema}\n            initialValues={{\n              login: \"\",\n              password: \"\",\n            }}\n            onSubmit={(values, {resetForm}) => {\n              navigate('/confirmation')\n              console.log(\"values\", values);\n              resetForm()\n            }}\n          >\n            {({ errors, touched }) => (\n              <Form className={styles.form}>\n                <div className={styles.formContainer}>\n                  <div className={styles.title}>Регистрация</div>\n                  <div className={styles.subtitle}>\n                    <span className={styles.subtitleLabel}>Уже есть аккаунт?</span>\n                    <span \n                      className={styles.subtitleLink}\n                      onClick={() => navigate('/login')}\n                    >\n                      Войти\n                    </span>\n                  </div>\n                  <label className={cn(styles.label, {[styles.labelError]: errors.login && touched.login})}>Логин или номер телефона Telegram</label>\n                  <Field\n                    name=\"login\"\n                    placeholder=\"Логин\"\n                    className={cn(styles.registerInput, {[styles.inputError]: errors.login && touched.login})}\n                  />\n                  <label className={cn(styles.label, {[styles.labelError]: errors.password && touched.password})}>Пароль</label>\n                  <Field\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Пароль\"\n                    className={cn(styles.registerInput, {[styles.inputError]: errors.password && touched.password})}\n                  />\n                  <div className={styles.buttonContainer}>\n                    <button type=\"submit\">Войти</button>\n                  </div>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Registration;\n"],"names":["validationSchema","yup","login","required","password","Registration","navigate","useNavigate","_jsx","className","styles","children","_jsxs","onClick","Formik","initialValues","onSubmit","values","_ref","resetForm","console","log","_ref2","errors","touched","Form","cn","Field","name","placeholder","type"],"sourceRoot":""}